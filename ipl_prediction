{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyM+M4KOnmONdgPqlri9p0SE",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    },
    "widgets": {
      "application/vnd.jupyter.widget-state+json": {
        "7866703cc1764717971cc44f55a96482": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DropdownModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DropdownModel",
            "_options_labels": [
              "M Chinnaswamy Stadium",
              "Punjab Cricket Association Stadium, Mohali",
              "Feroz Shah Kotla",
              "Wankhede Stadium",
              "Eden Gardens",
              "Sawai Mansingh Stadium",
              "Rajiv Gandhi International Stadium, Uppal",
              "MA Chidambaram Stadium, Chepauk",
              "Dr DY Patil Sports Academy",
              "Newlands",
              "St George's Park",
              "Kingsmead",
              "SuperSport Park",
              "Buffalo Park",
              "New Wanderers Stadium",
              "De Beers Diamond Oval",
              "OUTsurance Oval",
              "Brabourne Stadium",
              "Sardar Patel Stadium, Motera",
              "Barabati Stadium",
              "Vidarbha Cricket Association Stadium, Jamtha",
              "Himachal Pradesh Cricket Association Stadium",
              "Nehru Stadium",
              "Holkar Cricket Stadium",
              "Dr. Y.S. Rajasekhara Reddy ACA-VDCA Cricket Stadium",
              "Subrata Roy Sahara Stadium",
              "Shaheed Veer Narayan Singh International Stadium",
              "JSCA International Stadium Complex",
              "Sheikh Zayed Stadium",
              "Sharjah Cricket Stadium",
              "Dubai International Cricket Stadium",
              "Maharashtra Cricket Association Stadium",
              "Punjab Cricket Association IS Bindra Stadium, Mohali",
              "Saurashtra Cricket Association Stadium",
              "Green Park"
            ],
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "DropdownView",
            "description": "Select Venue:",
            "description_tooltip": null,
            "disabled": false,
            "index": 0,
            "layout": "IPY_MODEL_ba50a2a4eac6472db52b3d2361774b7f",
            "style": "IPY_MODEL_16594e1a48c940879d33db22016750ac"
          }
        },
        "ba50a2a4eac6472db52b3d2361774b7f": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "16594e1a48c940879d33db22016750ac": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "e1c5cc3898cb4c57a4b2328a1272abd2": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DropdownModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DropdownModel",
            "_options_labels": [
              "Kolkata Knight Riders",
              "Chennai Super Kings",
              "Rajasthan Royals",
              "Mumbai Indians",
              "Deccan Chargers",
              "Kings XI Punjab",
              "Royal Challengers Bangalore",
              "Delhi Daredevils",
              "Kochi Tuskers Kerala",
              "Pune Warriors",
              "Sunrisers Hyderabad",
              "Rising Pune Supergiants",
              "Gujarat Lions",
              "Rising Pune Supergiant"
            ],
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "DropdownView",
            "description": "Select Batting Team:",
            "description_tooltip": null,
            "disabled": false,
            "index": 6,
            "layout": "IPY_MODEL_6ee9deb5d7614427a282fdbcb8202529",
            "style": "IPY_MODEL_ef57f8272e6f4f2c8647c10716b79b2f"
          }
        },
        "6ee9deb5d7614427a282fdbcb8202529": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "ef57f8272e6f4f2c8647c10716b79b2f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "530ebfec444442a6bef134cc05de48a2": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DropdownModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DropdownModel",
            "_options_labels": [
              "Royal Challengers Bangalore",
              "Kings XI Punjab",
              "Delhi Daredevils",
              "Kolkata Knight Riders",
              "Rajasthan Royals",
              "Mumbai Indians",
              "Chennai Super Kings",
              "Deccan Chargers",
              "Pune Warriors",
              "Kochi Tuskers Kerala",
              "Sunrisers Hyderabad",
              "Rising Pune Supergiants",
              "Gujarat Lions",
              "Rising Pune Supergiant"
            ],
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "DropdownView",
            "description": "Select Batting Team:",
            "description_tooltip": null,
            "disabled": false,
            "index": 6,
            "layout": "IPY_MODEL_444dfab13bef48fabdf62b1da975137b",
            "style": "IPY_MODEL_eee3fd92925441d9803a4ccdaa0ae915"
          }
        },
        "444dfab13bef48fabdf62b1da975137b": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "eee3fd92925441d9803a4ccdaa0ae915": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "84d4c80cbb324fc982bee846e0e0d12a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DropdownModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DropdownModel",
            "_options_labels": [
              "SC Ganguly",
              "BB McCullum",
              "RT Ponting",
              "DJ Hussey",
              "Mohammad Hafeez",
              "PA Patel",
              "ML Hayden",
              "MEK Hussey",
              "MS Dhoni",
              "SK Raina",
              "JDP Oram",
              "S Badrinath",
              "T Kohli",
              "YK Pathan",
              "SR Watson",
              "M Kaif",
              "DS Lehmann",
              "RA Jadeja",
              "M Rawat",
              "D Salunkhe",
              "SK Warne",
              "SK Trivedi",
              "L Ronchi",
              "ST Jayasuriya",
              "DJ Thornely",
              "RV Uthappa",
              "PR Shah",
              "AM Nayar",
              "SM Pollock",
              "Harbhajan Singh",
              "AC Gilchrist",
              "Y Venugopal Rao",
              "VVS Laxman",
              "A Symonds",
              "RG Sharma",
              "SB Styris",
              "AS Yadav",
              "SB Bangar",
              "WPUJC Vaas",
              "RP Singh",
              "K Goel",
              "JR Hopes",
              "KC Sangakkara",
              "DPMD Jayawardene",
              "Yuvraj Singh",
              "IK Pathan",
              "S Sohal",
              "B Lee",
              "PP Chawla",
              "WA Mota",
              "Shahid Afridi",
              "RR Sarwan",
              "S Sreesanth",
              "VRV Singh",
              "S Chanderpaul",
              "R Dravid",
              "LRPL Taylor",
              "JH Kallis",
              "V Kohli",
              "MV Boucher",
              "P Kumar",
              "SB Joshi",
              "Z Khan",
              "R Vinay Kumar",
              "WP Saha",
              "LR Shukla",
              "AB Agarkar",
              "M Kartik",
              "I Sharma",
              "AM Rahane",
              "DJ Bravo",
              "MA Khote",
              "G Gambhir",
              "V Sehwag",
              "S Dhawan",
              "Shoaib Malik",
              "MK Tiwary",
              "KD Karthik",
              "R Bhatia",
              "MF Maharoof",
              "VY Mahesh",
              "DB Das",
              "HH Gibbs",
              "DNT Zoysa",
              "D Kalyankrishna",
              "GC Smith",
              "SA Asnodkar",
              "Sohail Tanvir",
              "SP Fleming",
              "S Vidyut",
              "JA Morkel",
              "LPC Silva",
              "DB Ravi Teja",
              "SE Marsh",
              "YV Takawale",
              "SS Tiwary",
              "RR Raje",
              "Joginder Sharma",
              "MS Gony",
              "M Muralitharan",
              "M Ntini",
              "W Jaffer",
              "CL White",
              "Misbah-ul-Haq",
              "DT Patil",
              "A Kumble",
              "DW Steyn",
              "S Anirudha",
              "MM Patel",
              "AB de Villiers",
              "A Chopra",
              "BJ Hodge",
              "T Taibu",
              "Umar Gul",
              "PP Ojha",
              "SP Goswami",
              "B Akhil",
              "Salman Butt",
              "TM Dilshan",
              "A Mishra",
              "J Arunkumar",
              "Iqbal Abdulla",
              "CK Kapugedera",
              "LA Pomersbach",
              "Shoaib Akhtar",
              "AB Dinda",
              "SR Tendulkar",
              "B Chipli",
              "DR Smith",
              "SD Chitnis",
              "Kamran Akmal",
              "TM Srivastava",
              "MK Pandey",
              "RR Powar",
              "JP Duminy",
              "JD Ryder",
              "KP Pietersen",
              "CH Gayle",
              "MC Henriques",
              "A Flintoff",
              "FH Edwards",
              "PC Valthaty",
              "RJ Quiney",
              "AD Mascarenhas",
              "AS Raut",
              "Pankaj Singh",
              "RS Bopara",
              "DL Vettori",
              "M Manhas",
              "PJ Sangwan",
              "MN van Wyk",
              "AA Bilakhia",
              "TL Suman",
              "Shoaib Ahmed",
              "GR Napier",
              "R Bishnoi",
              "RE van der Merwe",
              "KP Appanna",
              "M Vijay",
              "SB Jakati",
              "L Balaji",
              "NV Ojha",
              "LA Carseldine",
              "RJ Harris",
              "D du Preez",
              "DS Kulkarni",
              "SM Harwood",
              "Yashpal Singh",
              "AN Ghosh",
              "AD Mathews",
              "SM Katich",
              "DA Warner",
              "J Botha",
              "A Nehra",
              "Mashrafe Mortaza",
              "GJ Bailey",
              "AB McDonald",
              "Y Nagar",
              "Niraj Patel",
              "T Henderson",
              "A Singh",
              "R Ashwin",
              "T Thushara",
              "Mohammad Ashraful",
              "CA Pujara",
              "OA Shah",
              "AP Tare",
              "AT Rayudu",
              "R Sathish",
              "R McLaren",
              "MS Bisla",
              "YA Abdulla",
              "EJG Morgan",
              "AA Jhunjhunwala",
              "P Dogra",
              "A Uniyal",
              "KA Pollard",
              "MJ Lumb",
              "DR Martyn",
              "S Narwal",
              "M Morkel",
              "Anirudh Singh",
              "Jaskaran Singh",
              "FY Fazal",
              "AC Voges",
              "MD Mishra",
              "J Theron",
              "R Sharma",
              "Mandeep Singh",
              "KM Jadhav",
              "SW Tait",
              "PD Collingwood",
              "VS Malik",
              "SJ Srivastava",
              "AP Dole",
              "Bipul Sharma",
              "DE Bollinger",
              "BAW Mendis",
              "B Sumanth",
              "C Madan",
              "AG Paunikar",
              "AJ Finch",
              "MR Marsh",
              "STR Binny",
              "IR Jaggi",
              "DT Christian",
              "RV Gomez",
              "UBT Chand",
              "UT Yadav",
              "Sunny Singh",
              "NJ Rimmington",
              "MA Agarwal",
              "AUK Pathan",
              "AL Menaria",
              "DJ Jacobs",
              "WD Parnell",
              "TD Paine",
              "SB Wagh",
              "AC Thomas",
              "BJ Haddin",
              "NLTC Perera",
              "MS Wade",
              "JE Taylor",
              "RN ten Doeschate",
              "SL Malinga",
              "AG Murtaza",
              "TR Birt",
              "Harpreet Singh",
              "NL McCullum",
              "DH Yagnik",
              "AC Blizzard",
              "M Klinger",
              "I Malhotra",
              "A Mithun",
              "P Parameswaran",
              "AA Chavan",
              "ND Doshi",
              "CJ Ferguson",
              "B Kumar",
              "S Rana",
              "JEC Franklin",
              "Shakib Al Hasan",
              "F du Plessis",
              "SPD Smith",
              "MN Samuels",
              "KK Cooper",
              "HV Patel",
              "Ankit Sharma",
              "RE Levi",
              "RR Bhatkal",
              "Harmeet Singh",
              "BA Bhatt",
              "CJ McKay",
              "DJ Harris",
              "N Saini",
              "DA Miller",
              "Azhar Mahmood",
              "A Ashish Reddy",
              "V Pratap Singh",
              "BB Samantray",
              "RJ Peterson",
              "S Nadeem",
              "VR Aaron",
              "MJ Clarke",
              "AP Majumdar",
              "Gurkeerat Singh",
              "P Awana",
              "SP Narine",
              "A Chandila",
              "PA Reddy",
              "MC Juneja",
              "AD Russell",
              "KK Nair",
              "KB Arun Karthik",
              "GH Vihari",
              "MDKJ Perera",
              "R Shukla",
              "JD Unadkat",
              "M Vohra",
              "JP Faulkner",
              "R Rampaul",
              "BJ Rohrer",
              "Q de Kock",
              "KV Sharma",
              "SMSM Senanayake",
              "LJ Wright",
              "X Thalaivan Sargunam",
              "DJG Sammy",
              "MG Johnson",
              "A Mukund",
              "SV Samson",
              "BMAJ Mendis",
              "KL Rahul",
              "CM Gautam",
              "KW Richardson",
              "Parvez Rasool",
              "GJ Maxwell",
              "R Dhawan",
              "SA Yadav",
              "CJ Anderson",
              "JJ Bumrah",
              "CA Lynn",
              "MA Starc",
              "AR Patel",
              "Sandeep Sharma",
              "BR Dunk",
              "Shivam Sharma",
              "LMP Simmons",
              "VH Zol",
              "BCJ Cutting",
              "Mohammed Shami",
              "BE Hendricks",
              "S Gopal",
              "M de Lange",
              "RR Rossouw",
              "JO Holder",
              "JDS Neesham",
              "Imran Tahir",
              "MM Sharma",
              "DJ Hooda",
              "CH Morris",
              "SS Iyer",
              "SA Abbott",
              "AN Ahmed",
              "YS Chahal",
              "J Suchith",
              "P Negi",
              "RG More",
              "Anureet Singh",
              "HH Pandya",
              "NM Coulter-Nile",
              "PV Tambe",
              "MJ McClenaghan",
              "DJ Muthuswami",
              "SN Thakur",
              "SN Khan",
              "D Wiese",
              "S Aravind",
              "JC Buttler",
              "CR Brathwaite",
              "MP Stoinis",
              "C Munro",
              "P Sahu",
              "KH Pandya",
              "TG Southee",
              "MJ Guptill",
              "KJ Abbott",
              "TM Head",
              "AD Nath",
              "NS Naik",
              "Ishan Kishan",
              "SW Billings",
              "RR Pant",
              "KS Williamson",
              "KC Cariappa",
              "PSP Handscomb",
              "Sachin Baby",
              "J Yadav",
              "UT Khawaja",
              "HM Amla",
              "BB Sran",
              "N Rana",
              "F Behardien",
              "ER Dwivedi",
              "JJ Roy",
              "BA Stokes",
              "Vishnu Vinod",
              "TS Mills",
              "Basil Thampi",
              "CR Woakes",
              "V Shankar",
              "Rashid Khan",
              "RA Tripathi",
              "RD Chahar",
              "LH Ferguson",
              "C de Grandhomme",
              "PJ Cummins",
              "Mohammad Nabi",
              "Kuldeep Yadav",
              "Washington Sundar",
              "S Badree",
              "A Choudhary",
              "AR Bawne",
              "AJ Tye",
              "Ankit Soni",
              "K Rabada",
              "AF Milne",
              "SP Jackson",
              "Swapnil Singh",
              "R Tewatia",
              "AS Rajpoot"
            ],
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "DropdownView",
            "description": "Select Striker:",
            "description_tooltip": null,
            "disabled": false,
            "index": 1,
            "layout": "IPY_MODEL_80f5e8106028404d863cf03802758ad8",
            "style": "IPY_MODEL_62a75d0611294748b170238ac2cd5306"
          }
        },
        "80f5e8106028404d863cf03802758ad8": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "62a75d0611294748b170238ac2cd5306": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "73d5698ea9e24d60a2a1b96afe071400": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DropdownModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DropdownModel",
            "_options_labels": [
              "P Kumar",
              "Z Khan",
              "AA Noffke",
              "JH Kallis",
              "SB Joshi",
              "CL White",
              "B Lee",
              "S Sreesanth",
              "JR Hopes",
              "IK Pathan",
              "K Goel",
              "PP Chawla",
              "WA Mota",
              "GD McGrath",
              "B Geeves",
              "MF Maharoof",
              "R Bhatia",
              "DL Vettori",
              "R Vinay Kumar",
              "B Akhil",
              "AB Dinda",
              "I Sharma",
              "AB Agarkar",
              "M Kartik",
              "Mohammad Hafeez",
              "DJ Hussey",
              "MM Patel",
              "SR Watson",
              "SK Trivedi",
              "SK Warne",
              "D Salunkhe",
              "Pankaj Singh",
              "YK Pathan",
              "Mohammad Asif",
              "VY Mahesh",
              "SM Pollock",
              "A Nehra",
              "DS Kulkarni",
              "Harbhajan Singh",
              "DJ Bravo",
              "VS Yeligati",
              "AM Nayar",
              "MA Khote",
              "Sohail Tanvir",
              "JDP Oram",
              "MS Gony",
              "P Amarnath",
              "M Muralitharan",
              "Joginder Sharma",
              "RP Singh",
              "DNT Zoysa",
              "SB Bangar",
              "Shahid Afridi",
              "PP Ojha",
              "D Kalyankrishna",
              "VRV Singh",
              "Yuvraj Singh",
              "DW Steyn",
              "CRD Fernando",
              "ST Jayasuriya",
              "V Kohli",
              "Gagandeep Singh",
              "Umar Gul",
              "SC Ganguly",
              "LR Shukla",
              "PJ Sangwan",
              "Shoaib Malik",
              "V Sehwag",
              "A Kumble",
              "DP Vijaykumar",
              "SB Styris",
              "RR Raje",
              "JA Morkel",
              "L Balaji",
              "CK Kapugedera",
              "DR Smith",
              "WPUJC Vaas",
              "Y Venugopal Rao",
              "AD Mascarenhas",
              "A Mishra",
              "DJ Thornely",
              "PM Sarvesh Kumar",
              "Abdur Razzak",
              "TM Dilshan",
              "SD Chitnis",
              "M Ntini",
              "RR Powar",
              "SK Raina",
              "BAW Mendis",
              "T Thushara",
              "A Flintoff",
              "Kamran Khan",
              "T Henderson",
              "FH Edwards",
              "Harmeet Singh",
              "KP Pietersen",
              "LRPL Taylor",
              "JD Ryder",
              "Anureet Singh",
              "CH Gayle",
              "RR Bose",
              "YA Abdulla",
              "RS Bopara",
              "SL Malinga",
              "DP Nannes",
              "RG Sharma",
              "Shoaib Ahmed",
              "BJ Hodge",
              "RA Jadeja",
              "RE van der Merwe",
              "KP Appanna",
              "JP Duminy",
              "SR Tendulkar",
              "VS Malik",
              "SM Harwood",
              "AS Raut",
              "D du Preez",
              "RJ Harris",
              "TL Suman",
              "A Singh",
              "M Morkel",
              "LA Carseldine",
              "S Tyagi",
              "SB Jakati",
              "A Mithun",
              "AM Rahane",
              "A Symonds",
              "C Nanda",
              "J Botha",
              "CK Langeveldt",
              "SS Sarkar",
              "AM Salvi",
              "Jaskaran Singh",
              "SW Tait",
              "A Uniyal",
              "AA Jhunjhunwala",
              "AD Mathews",
              "RS Gavaskar",
              "R Ashwin",
              "JM Kemp",
              "S Ladda",
              "SE Bond",
              "SJ Srivastava",
              "Bipul Sharma",
              "Y Nagar",
              "UT Yadav",
              "MC Henriques",
              "R McLaren",
              "J Theron",
              "S Narwal",
              "AC Voges",
              "KAJ Roach",
              "KA Pollard",
              "C Ganapathy",
              "SB Wagh",
              "R Sharma",
              "AN Ahmed",
              "R Sathish",
              "AP Dole",
              "FY Fazal",
              "PD Collingwood",
              "MR Marsh",
              "L Ablish",
              "S Sriram",
              "AB McDonald",
              "DE Bollinger",
              "JD Unadkat",
              "MK Tiwary",
              "ND Doshi",
              "Iqbal Abdulla",
              "AL Menaria",
              "STR Binny",
              "AUK Pathan",
              "AG Murtaza",
              "JEC Franklin",
              "AC Thomas",
              "WD Parnell",
              "M Manhas",
              "DT Christian",
              "DB Ravi Teja",
              "BA Bhatt",
              "JJ van der Wath",
              "S Aravind",
              "R Ninan",
              "Shakib Al Hasan",
              "NLTC Perera",
              "RV Gomez",
              "PC Valthaty",
              "S Nadeem",
              "S Randiv",
              "J Syed Mohammad",
              "NL McCullum",
              "JE Taylor",
              "KMDN Kulasekara",
              "TG Southee",
              "P Parameswaran",
              "S Dhawan",
              "B Kumar",
              "AA Kazi",
              "VR Aaron",
              "P Prasanth",
              "Y Gnaneswara Rao",
              "AA Chavan",
              "RW Price",
              "GJ Maxwell",
              "JP Faulkner",
              "DAJ Bracewell",
              "Ankit Sharma",
              "DJ Harris",
              "TP Sudhindra",
              "SP Narine",
              "HV Patel",
              "KK Cooper",
              "GB Hogg",
              "P Awana",
              "MN Samuels",
              "AD Russell",
              "Azhar Mahmood",
              "A Chandila",
              "P Negi",
              "RJ Peterson",
              "CJ McKay",
              "R Shukla",
              "MJ Clarke",
              "V Pratap Singh",
              "A Ashish Reddy",
              "BW Hilfenhaus",
              "K Upadhyay",
              "Sunny Gupta",
              "MG Johnson",
              "JJ Bumrah",
              "AS Rajpoot",
              "B Laughlin",
              "GH Vihari",
              "Mohammed Shami",
              "BMAJ Mendis",
              "CH Morris",
              "Anand Rajan",
              "AJ Finch",
              "MM Sharma",
              "KV Sharma",
              "SMSM Senanayake",
              "R Rampaul",
              "R Dhawan",
              "JO Holder",
              "IC Pandey",
              "LJ Wright",
              "S Kaul",
              "YS Chahal",
              "KW Richardson",
              "DJG Sammy",
              "Sandeep Sharma",
              "PV Tambe",
              "Parvez Rasool",
              "RN ten Doeschate",
              "MG Neser",
              "NM Coulter-Nile",
              "CJ Anderson",
              "MA Starc",
              "AR Patel",
              "JDS Neesham",
              "M Vijay",
              "SA Yadav",
              "S Badree",
              "R Tewatia",
              "V Shankar",
              "Imran Tahir",
              "Shivam Sharma",
              "S Rana",
              "BE Hendricks",
              "PJ Cummins",
              "K Santokie",
              "S Gopal",
              "Karanveer Singh",
              "DJ Muthuswami",
              "TA Boult",
              "SA Abbott",
              "DJ Hooda",
              "P Suyal",
              "J Suchith",
              "D Wiese",
              "MJ McClenaghan",
              "HH Pandya",
              "RG More",
              "GS Sandhu",
              "M de Lange",
              "J Yadav",
              "Gurkeerat Singh",
              "M Ashwin",
              "JW Hastings",
              "C Munro",
              "Mustafizur Rahman",
              "CR Brathwaite",
              "KJ Abbott",
              "P Sahu",
              "BB Sran",
              "KH Pandya",
              "S Kaushik",
              "T Shamsi",
              "MP Stoinis",
              "Swapnil Singh",
              "SM Boland",
              "CJ Jordan",
              "KC Cariappa",
              "A Zampa",
              "BCJ Cutting",
              "DL Chahar",
              "KS Williamson",
              "Kuldeep Yadav",
              "TS Mills",
              "A Choudhary",
              "TM Head",
              "BA Stokes",
              "CR Woakes",
              "T Natarajan",
              "Rashid Khan",
              "C de Grandhomme",
              "Basil Thampi",
              "AJ Tye",
              "AF Milne",
              "K Rabada",
              "Washington Sundar",
              "SN Thakur",
              "SS Agarwal",
              "NB Singh",
              "Ankit Soni",
              "Mohammad Nabi",
              "Mohammed Siraj",
              "LH Ferguson"
            ],
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "DropdownView",
            "description": "Select Bowler:",
            "description_tooltip": null,
            "disabled": false,
            "index": 6,
            "layout": "IPY_MODEL_4eeb364628e241dfbf9dbe7ac6bde476",
            "style": "IPY_MODEL_e8db0af81b574889aa2e54c10eabb467"
          }
        },
        "4eeb364628e241dfbf9dbe7ac6bde476": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "e8db0af81b574889aa2e54c10eabb467": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "2edb473bcc0d4666abf918ca21b41c61": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ButtonModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ButtonModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ButtonView",
            "button_style": "",
            "description": "Predict Score",
            "disabled": false,
            "icon": "",
            "layout": "IPY_MODEL_b193e51bd58e409987dc59c9d0d8be32",
            "style": "IPY_MODEL_f8ec48ad2de0474e94be0865c4837f20",
            "tooltip": ""
          }
        },
        "b193e51bd58e409987dc59c9d0d8be32": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "f8ec48ad2de0474e94be0865c4837f20": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ButtonStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ButtonStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "button_color": null,
            "font_weight": ""
          }
        },
        "272e124d0e2244ae8f886cc0c84e299c": {
          "model_module": "@jupyter-widgets/output",
          "model_name": "OutputModel",
          "model_module_version": "1.0.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/output",
            "_model_module_version": "1.0.0",
            "_model_name": "OutputModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/output",
            "_view_module_version": "1.0.0",
            "_view_name": "OutputView",
            "layout": "IPY_MODEL_33d9e775f2c444109d0d4da7bb3c17da",
            "msg_id": "",
            "outputs": [
              {
                "output_type": "stream",
                "name": "stdout",
                "text": [
                  "\r\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 19ms/step"
                ]
              },
              {
                "output_type": "stream",
                "name": "stdout",
                "text": [
                  "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step\n"
                ]
              },
              {
                "output_type": "stream",
                "name": "stdout",
                "text": [
                  "148\n"
                ]
              }
            ]
          }
        },
        "33d9e775f2c444109d0d4da7bb3c17da": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        }
      }
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/pylacharan/ipl_prediction/blob/main/ipl_prediction\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "\n",
        "import all the necessary libraries\n",
        "\n"
      ],
      "metadata": {
        "id": "HGXqbGJoeuoP"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 7,
      "metadata": {
        "id": "UGZKf8AFeqFU"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "from sklearn import preprocessing\n",
        "import keras\n",
        "import tensorflow as tf\n"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Loading the dataset!"
      ],
      "metadata": {
        "id": "MfabjGire9Ez"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "ipl = pd.read_csv('ipl_data.csv')\n",
        "ipl.head()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 417
        },
        "id": "mr4W4JMie5UY",
        "outputId": "e9b0fbf2-8f81-408a-f72b-2134de23b742"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   mid        date                  venue               bat_team  \\\n",
              "0    1  2008-04-18  M Chinnaswamy Stadium  Kolkata Knight Riders   \n",
              "1    1  2008-04-18  M Chinnaswamy Stadium  Kolkata Knight Riders   \n",
              "2    1  2008-04-18  M Chinnaswamy Stadium  Kolkata Knight Riders   \n",
              "3    1  2008-04-18  M Chinnaswamy Stadium  Kolkata Knight Riders   \n",
              "4    1  2008-04-18  M Chinnaswamy Stadium  Kolkata Knight Riders   \n",
              "\n",
              "                     bowl_team      batsman   bowler  runs  wickets  overs  \\\n",
              "0  Royal Challengers Bangalore   SC Ganguly  P Kumar     1        0    0.1   \n",
              "1  Royal Challengers Bangalore  BB McCullum  P Kumar     1        0    0.2   \n",
              "2  Royal Challengers Bangalore  BB McCullum  P Kumar     2        0    0.2   \n",
              "3  Royal Challengers Bangalore  BB McCullum  P Kumar     2        0    0.3   \n",
              "4  Royal Challengers Bangalore  BB McCullum  P Kumar     2        0    0.4   \n",
              "\n",
              "   runs_last_5  wickets_last_5  striker  non-striker  total  \n",
              "0            1               0        0            0    222  \n",
              "1            1               0        0            0    222  \n",
              "2            2               0        0            0    222  \n",
              "3            2               0        0            0    222  \n",
              "4            2               0        0            0    222  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-882a331f-f985-4700-aff1-0baed8acfea5\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>mid</th>\n",
              "      <th>date</th>\n",
              "      <th>venue</th>\n",
              "      <th>bat_team</th>\n",
              "      <th>bowl_team</th>\n",
              "      <th>batsman</th>\n",
              "      <th>bowler</th>\n",
              "      <th>runs</th>\n",
              "      <th>wickets</th>\n",
              "      <th>overs</th>\n",
              "      <th>runs_last_5</th>\n",
              "      <th>wickets_last_5</th>\n",
              "      <th>striker</th>\n",
              "      <th>non-striker</th>\n",
              "      <th>total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>2008-04-18</td>\n",
              "      <td>M Chinnaswamy Stadium</td>\n",
              "      <td>Kolkata Knight Riders</td>\n",
              "      <td>Royal Challengers Bangalore</td>\n",
              "      <td>SC Ganguly</td>\n",
              "      <td>P Kumar</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>222</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>2008-04-18</td>\n",
              "      <td>M Chinnaswamy Stadium</td>\n",
              "      <td>Kolkata Knight Riders</td>\n",
              "      <td>Royal Challengers Bangalore</td>\n",
              "      <td>BB McCullum</td>\n",
              "      <td>P Kumar</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>222</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1</td>\n",
              "      <td>2008-04-18</td>\n",
              "      <td>M Chinnaswamy Stadium</td>\n",
              "      <td>Kolkata Knight Riders</td>\n",
              "      <td>Royal Challengers Bangalore</td>\n",
              "      <td>BB McCullum</td>\n",
              "      <td>P Kumar</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>222</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1</td>\n",
              "      <td>2008-04-18</td>\n",
              "      <td>M Chinnaswamy Stadium</td>\n",
              "      <td>Kolkata Knight Riders</td>\n",
              "      <td>Royal Challengers Bangalore</td>\n",
              "      <td>BB McCullum</td>\n",
              "      <td>P Kumar</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>222</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1</td>\n",
              "      <td>2008-04-18</td>\n",
              "      <td>M Chinnaswamy Stadium</td>\n",
              "      <td>Kolkata Knight Riders</td>\n",
              "      <td>Royal Challengers Bangalore</td>\n",
              "      <td>BB McCullum</td>\n",
              "      <td>P Kumar</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>222</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-882a331f-f985-4700-aff1-0baed8acfea5')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-882a331f-f985-4700-aff1-0baed8acfea5 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-882a331f-f985-4700-aff1-0baed8acfea5');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-af981910-f657-4686-bbe8-5face310e390\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-af981910-f657-4686-bbe8-5face310e390')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-af981910-f657-4686-bbe8-5face310e390 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "ipl",
              "summary": "{\n  \"name\": \"ipl\",\n  \"rows\": 76014,\n  \"fields\": [\n    {\n      \"column\": \"mid\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 178,\n        \"min\": 1,\n        \"max\": 617,\n        \"num_unique_values\": 617,\n        \"samples\": [\n          50,\n          582,\n          83\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"date\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 442,\n        \"samples\": [\n          \"2014-05-02\",\n          \"2012-05-15\",\n          \"2009-05-18\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"venue\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 35,\n        \"samples\": [\n          \"Shaheed Veer Narayan Singh International Stadium\",\n          \"Buffalo Park\",\n          \"Dr. Y.S. Rajasekhara Reddy ACA-VDCA Cricket Stadium\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"bat_team\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 14,\n        \"samples\": [\n          \"Pune Warriors\",\n          \"Rising Pune Supergiants\",\n          \"Kolkata Knight Riders\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"bowl_team\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 14,\n        \"samples\": [\n          \"Kochi Tuskers Kerala\",\n          \"Rising Pune Supergiants\",\n          \"Royal Challengers Bangalore\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"batsman\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 411,\n        \"samples\": [\n          \"A Nehra\",\n          \"A Symonds\",\n          \"DJ Bravo\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"bowler\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 329,\n        \"samples\": [\n          \"IK Pathan\",\n          \"AB McDonald\",\n          \"JM Kemp\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"runs\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 48,\n        \"min\": 0,\n        \"max\": 263,\n        \"num_unique_values\": 252,\n        \"samples\": [\n          106,\n          21,\n          97\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"wickets\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 0,\n        \"max\": 10,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          5,\n          0,\n          9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"overs\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.772586873852113,\n        \"min\": 0.0,\n        \"max\": 19.6,\n        \"num_unique_values\": 140,\n        \"samples\": [\n          17.6,\n          11.1,\n          5.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"runs_last_5\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14,\n        \"min\": 0,\n        \"max\": 113,\n        \"num_unique_values\": 102,\n        \"samples\": [\n          37,\n          18,\n          74\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"wickets_last_5\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 7,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1,\n          5,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"striker\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 20,\n        \"min\": 0,\n        \"max\": 175,\n        \"num_unique_values\": 155,\n        \"samples\": [\n          95,\n          160,\n          80\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"non-striker\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10,\n        \"min\": 0,\n        \"max\": 109,\n        \"num_unique_values\": 88,\n        \"samples\": [\n          69,\n          0,\n          18\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"total\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 29,\n        \"min\": 67,\n        \"max\": 263,\n        \"num_unique_values\": 138,\n        \"samples\": [\n          132,\n          115,\n          154\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Data Pre-processing"
      ],
      "metadata": {
        "id": "_N5K2eIUfFks"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Dropping certain features\n",
        "df = ipl.drop(['date', 'runs', 'wickets', 'overs', 'runs_last_5', 'wickets_last_5','mid', 'striker', 'non-striker'], axis =1)\n"
      ],
      "metadata": {
        "id": "PMNm5H1ufGkD"
      },
      "execution_count": 10,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        " Further Pre-Processing"
      ],
      "metadata": {
        "id": "WDHZgybUfJFw"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "X = df.drop(['total'], axis =1)\n",
        "y = df['total']\n"
      ],
      "metadata": {
        "id": "8f2tJL04fML8"
      },
      "execution_count": 11,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Label Encoding"
      ],
      "metadata": {
        "id": "8jLhWob4fOZG"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Label Encoding\n",
        "\n",
        "from sklearn.preprocessing import LabelEncoder\n",
        "\n",
        "# Create a LabelEncoder object for each categorical feature\n",
        "venue_encoder = LabelEncoder()\n",
        "batting_team_encoder = LabelEncoder()\n",
        "bowling_team_encoder = LabelEncoder()\n",
        "striker_encoder = LabelEncoder()\n",
        "bowler_encoder = LabelEncoder()\n",
        "\n",
        "# Fit and transform the categorical features with label encoding\n",
        "X['venue'] = venue_encoder.fit_transform(X['venue'])\n",
        "X['bat_team'] = batting_team_encoder.fit_transform(X['bat_team'])\n",
        "X['bowl_team'] = bowling_team_encoder.fit_transform(X['bowl_team'])\n",
        "X['batsman'] = striker_encoder.fit_transform(X['batsman'])\n",
        "X['bowler'] = bowler_encoder.fit_transform(X['bowler'])\n"
      ],
      "metadata": {
        "id": "dAl-KIeJfQ--"
      },
      "execution_count": 12,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Train Test Split\n",
        "\n"
      ],
      "metadata": {
        "id": "dwYpgIfzfTdl"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Train test Split\n",
        "from sklearn.model_selection import train_test_split\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)\n"
      ],
      "metadata": {
        "id": "kHocdscqfWCE"
      },
      "execution_count": 13,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Feature Scaling"
      ],
      "metadata": {
        "id": "oCA3JzWVfXz5"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.preprocessing import MinMaxScaler\n",
        "\n",
        "scaler = MinMaxScaler()\n",
        "\n",
        "# Fit the scaler on the training data and transform both training and testing data\n",
        "X_train_scaled = scaler.fit_transform(X_train)\n",
        "X_test_scaled = scaler.transform(X_test)\n"
      ],
      "metadata": {
        "id": "mettgnwIfaNG"
      },
      "execution_count": 14,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Define the Neural Network"
      ],
      "metadata": {
        "id": "8et8-2uPfcW1"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Define the neural network model\n",
        "model = keras.Sequential([\n",
        "    keras.layers.Input( shape=(X_train_scaled.shape[1],)),  # Input layer\n",
        "    keras.layers.Dense(512, activation='relu'),  # Hidden layer with 512 units and ReLU activation\n",
        "    keras.layers.Dense(216, activation='relu'),  # Hidden layer with 216 units and ReLU activation\n",
        "    keras.layers.Dense(1, activation='linear')  # Output layer with linear activation for regression\n",
        "])\n",
        "\n",
        "# Compile the model with Huber loss\n",
        "huber_loss = tf.keras.losses.Huber(delta=1.0)  # You can adjust the 'delta' parameter as needed\n",
        "model.compile(optimizer='adam', loss=huber_loss)  # Use Huber loss for regression\n"
      ],
      "metadata": {
        "id": "Sexq2-ZgffxG"
      },
      "execution_count": 15,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        " Model Training"
      ],
      "metadata": {
        "id": "MWaxUnQ2fiDK"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Train the model\n",
        "model.fit(X_train_scaled, y_train, epochs=50, batch_size=64, validation_data=(X_test_scaled, y_test))\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "J2_3_mYtfknx",
        "outputId": "967696f7-dfad-4f3a-9912-136f38a6d5fe"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/50\n",
            "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 5ms/step - loss: 55.0348 - val_loss: 22.0890\n",
            "Epoch 2/50\n",
            "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 4ms/step - loss: 22.3346 - val_loss: 22.6118\n",
            "Epoch 3/50\n",
            "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 7ms/step - loss: 22.4657 - val_loss: 21.9363\n",
            "Epoch 4/50\n",
            "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 5ms/step - loss: 22.1967 - val_loss: 22.0049\n",
            "Epoch 5/50\n",
            "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 22.0992 - val_loss: 21.9403\n",
            "Epoch 6/50\n",
            "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 5ms/step - loss: 22.2972 - val_loss: 22.5932\n",
            "Epoch 7/50\n",
            "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 6ms/step - loss: 22.3120 - val_loss: 21.8664\n",
            "Epoch 8/50\n",
            "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 5ms/step - loss: 22.1659 - val_loss: 22.4376\n",
            "Epoch 9/50\n",
            "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 7ms/step - loss: 22.2085 - val_loss: 21.9299\n",
            "Epoch 10/50\n",
            "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 5ms/step - loss: 21.9093 - val_loss: 21.8552\n",
            "Epoch 11/50\n",
            "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 7ms/step - loss: 22.1851 - val_loss: 21.9517\n",
            "Epoch 12/50\n",
            "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 4ms/step - loss: 22.1604 - val_loss: 21.8691\n",
            "Epoch 13/50\n",
            "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 7ms/step - loss: 22.1223 - val_loss: 21.7833\n",
            "Epoch 14/50\n",
            "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 5ms/step - loss: 22.0902 - val_loss: 21.7500\n",
            "Epoch 15/50\n",
            "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 6ms/step - loss: 22.2019 - val_loss: 21.7320\n",
            "Epoch 16/50\n",
            "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 4ms/step - loss: 22.1510 - val_loss: 21.7360\n",
            "Epoch 17/50\n",
            "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 4ms/step - loss: 22.1353 - val_loss: 21.8264\n",
            "Epoch 18/50\n",
            "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 6ms/step - loss: 22.0085 - val_loss: 21.6872\n",
            "Epoch 19/50\n",
            "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 4ms/step - loss: 22.0277 - val_loss: 21.5758\n",
            "Epoch 20/50\n",
            "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 5ms/step - loss: 21.8374 - val_loss: 21.4976\n",
            "Epoch 21/50\n",
            "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 7ms/step - loss: 21.6020 - val_loss: 21.4430\n",
            "Epoch 22/50\n",
            "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 5ms/step - loss: 21.9002 - val_loss: 21.3608\n",
            "Epoch 23/50\n",
            "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 6ms/step - loss: 21.7755 - val_loss: 21.2967\n",
            "Epoch 24/50\n",
            "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 4ms/step - loss: 21.4980 - val_loss: 21.2931\n",
            "Epoch 25/50\n",
            "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 5ms/step - loss: 21.4127 - val_loss: 21.3133\n",
            "Epoch 26/50\n",
            "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 6ms/step - loss: 21.4319 - val_loss: 21.1780\n",
            "Epoch 27/50\n",
            "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 5ms/step - loss: 21.2295 - val_loss: 21.2554\n",
            "Epoch 28/50\n",
            "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 6ms/step - loss: 21.3083 - val_loss: 21.0541\n",
            "Epoch 29/50\n",
            "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 6ms/step - loss: 21.2760 - val_loss: 21.1992\n",
            "Epoch 30/50\n",
            "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 5ms/step - loss: 21.2080 - val_loss: 21.1523\n",
            "Epoch 31/50\n",
            "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 6ms/step - loss: 21.2113 - val_loss: 21.4910\n",
            "Epoch 32/50\n",
            "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 5ms/step - loss: 21.0390 - val_loss: 20.9172\n",
            "Epoch 33/50\n",
            "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5ms/step - loss: 20.9862 - val_loss: 20.7418\n",
            "Epoch 34/50\n",
            "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 7ms/step - loss: 20.8032 - val_loss: 20.5517\n",
            "Epoch 35/50\n",
            "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 4ms/step - loss: 20.6635 - val_loss: 20.3875\n",
            "Epoch 36/50\n",
            "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 6ms/step - loss: 20.5146 - val_loss: 20.4902\n",
            "Epoch 37/50\n",
            "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 5ms/step - loss: 20.4379 - val_loss: 20.1946\n",
            "Epoch 38/50\n",
            "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 6ms/step - loss: 20.3790 - val_loss: 20.1375\n",
            "Epoch 39/50\n",
            "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 4ms/step - loss: 20.2802 - val_loss: 19.9390\n",
            "Epoch 40/50\n",
            "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 5ms/step - loss: 19.9690 - val_loss: 20.0443\n",
            "Epoch 41/50\n",
            "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 7ms/step - loss: 19.8978 - val_loss: 19.6097\n",
            "Epoch 42/50\n",
            "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 4ms/step - loss: 19.7791 - val_loss: 19.8185\n",
            "Epoch 43/50\n",
            "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 5ms/step - loss: 19.7272 - val_loss: 19.3571\n",
            "Epoch 44/50\n",
            "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 7ms/step - loss: 19.6178 - val_loss: 19.5937\n",
            "Epoch 45/50\n",
            "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 5ms/step - loss: 19.4678 - val_loss: 19.1620\n",
            "Epoch 46/50\n",
            "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 8ms/step - loss: 19.2860 - val_loss: 19.5529\n",
            "Epoch 47/50\n",
            "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 10ms/step - loss: 19.2394 - val_loss: 19.0321\n",
            "Epoch 48/50\n",
            "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 10ms/step - loss: 19.2296 - val_loss: 19.1674\n",
            "Epoch 49/50\n",
            "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 6ms/step - loss: 19.2208 - val_loss: 19.3878\n",
            "Epoch 50/50\n",
            "\u001b[1m832/832\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 5ms/step - loss: 19.2287 - val_loss: 18.9799\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<keras.src.callbacks.history.History at 0x7b41441a6e60>"
            ]
          },
          "metadata": {},
          "execution_count": 16
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "model_losses = pd.DataFrame(model.history.history)\n",
        "model_losses.plot()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 447
        },
        "id": "Vc5u2zJ9fsoA",
        "outputId": "8f2bf062-59c3-4844-c017-9677b6b8f025"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: >"
            ]
          },
          "metadata": {},
          "execution_count": 17
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Model Evaluation"
      ],
      "metadata": {
        "id": "2yh6qslwfySt"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Make predictions\n",
        "predictions = model.predict(X_test_scaled)\n",
        "\n",
        "from sklearn.metrics import mean_absolute_error,mean_squared_error\n",
        "mean_absolute_error(y_test,predictions)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "GmXLdOe3fzbc",
        "outputId": "4490f14f-8b6c-4f7f-b8ad-02591cad0ab5"
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\u001b[1m713/713\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 1ms/step\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "19.470918240470862"
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Let’s create an Interactive Widget"
      ],
      "metadata": {
        "id": "xN_hE5JYf2th"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import ipywidgets as widgets\n",
        "from IPython.display import display, clear_output\n",
        "\n",
        "import warnings\n",
        "warnings.filterwarnings(\"ignore\")\n",
        "\n",
        "venue = widgets.Dropdown(options=df['venue'].unique().tolist(),description='Select Venue:')\n",
        "batting_team = widgets.Dropdown(options =df['bat_team'].unique().tolist(),  description='Select Batting Team:')\n",
        "bowling_team = widgets.Dropdown(options=df['bowl_team'].unique().tolist(),  description='Select Batting Team:')\n",
        "striker = widgets.Dropdown(options=df['batsman'].unique().tolist(), description='Select Striker:')\n",
        "bowler = widgets.Dropdown(options=df['bowler'].unique().tolist(), description='Select Bowler:')\n",
        "\n",
        "predict_button = widgets.Button(description=\"Predict Score\")\n",
        "\n",
        "def predict_score(b):\n",
        "    with output:\n",
        "        clear_output()  # Clear the previous output\n",
        "\n",
        "\n",
        "        # Decode the encoded values back to their original values\n",
        "        decoded_venue = venue_encoder.transform([venue.value])\n",
        "        decoded_batting_team = batting_team_encoder.transform([batting_team.value])\n",
        "        decoded_bowling_team = bowling_team_encoder.transform([bowling_team.value])\n",
        "        decoded_striker = striker_encoder.transform([striker.value])\n",
        "        decoded_bowler = bowler_encoder.transform([bowler.value])\n",
        "\n",
        "\n",
        "        input = np.array([decoded_venue,  decoded_batting_team, decoded_bowling_team,decoded_striker, decoded_bowler])\n",
        "        input = input.reshape(1,5)\n",
        "        input = scaler.transform(input)\n",
        "        #print(input)\n",
        "        predicted_score = model.predict(input)\n",
        "        predicted_score = int(predicted_score[0,0])\n",
        "\n",
        "        print(predicted_score)\n"
      ],
      "metadata": {
        "id": "SP3FAoz-f6MP"
      },
      "execution_count": 19,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "predict_button.on_click(predict_score)\n",
        "output = widgets.Output()\n",
        "display(venue, batting_team, bowling_team, striker, bowler, predict_button, output)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 253,
          "referenced_widgets": [
            "7866703cc1764717971cc44f55a96482",
            "ba50a2a4eac6472db52b3d2361774b7f",
            "16594e1a48c940879d33db22016750ac",
            "e1c5cc3898cb4c57a4b2328a1272abd2",
            "6ee9deb5d7614427a282fdbcb8202529",
            "ef57f8272e6f4f2c8647c10716b79b2f",
            "530ebfec444442a6bef134cc05de48a2",
            "444dfab13bef48fabdf62b1da975137b",
            "eee3fd92925441d9803a4ccdaa0ae915",
            "84d4c80cbb324fc982bee846e0e0d12a",
            "80f5e8106028404d863cf03802758ad8",
            "62a75d0611294748b170238ac2cd5306",
            "73d5698ea9e24d60a2a1b96afe071400",
            "4eeb364628e241dfbf9dbe7ac6bde476",
            "e8db0af81b574889aa2e54c10eabb467",
            "2edb473bcc0d4666abf918ca21b41c61",
            "b193e51bd58e409987dc59c9d0d8be32",
            "f8ec48ad2de0474e94be0865c4837f20",
            "272e124d0e2244ae8f886cc0c84e299c",
            "33d9e775f2c444109d0d4da7bb3c17da"
          ]
        },
        "id": "mvGgd_RUgAdh",
        "outputId": "a74828dc-ed72-488e-d246-cb8c4f6c698f"
      },
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Dropdown(description='Select Venue:', options=('M Chinnaswamy Stadium', 'Punjab Cricket Association Stadium, M…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "7866703cc1764717971cc44f55a96482"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Dropdown(description='Select Batting Team:', options=('Kolkata Knight Riders', 'Chennai Super Kings', 'Rajasth…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "e1c5cc3898cb4c57a4b2328a1272abd2"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Dropdown(description='Select Batting Team:', options=('Royal Challengers Bangalore', 'Kings XI Punjab', 'Delhi…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "530ebfec444442a6bef134cc05de48a2"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Dropdown(description='Select Striker:', options=('SC Ganguly', 'BB McCullum', 'RT Ponting', 'DJ Hussey', 'Moha…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "84d4c80cbb324fc982bee846e0e0d12a"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Dropdown(description='Select Bowler:', options=('P Kumar', 'Z Khan', 'AA Noffke', 'JH Kallis', 'SB Joshi', 'CL…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "73d5698ea9e24d60a2a1b96afe071400"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Button(description='Predict Score', style=ButtonStyle())"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "2edb473bcc0d4666abf918ca21b41c61"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Output()"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "272e124d0e2244ae8f886cc0c84e299c"
            }
          },
          "metadata": {}
        }
      ]
    }
  ]
}